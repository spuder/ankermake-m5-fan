esphome:
  name: foobar3
  friendly_name: AnkerMake-M5
  # platform: esp32

esp32:
  board: lolin_s2_mini
  # board: lolin_d1_mini_lite ? 
  variant: esp32s2

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "m63DOv3YOthIXl/9Dwqwfr08mifBVZRXubf6lSDNWDE="
    #TODO: remove this

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  #TODO: con't commit this
  ap:
    ssid: "Esphome-Web-737C86"
    password: "9miZnLbZX9Xf"

captive_portal:
    
web_server:
  port: 80


### GPIO Configuration
#------------------------------------------------------------------------------

# https://github.com/espressif/arduino-esp32/blob/master/variants/lolin_s2_mini/pins_arduino.h#L29-L41
# GPIO0, GPIO45, GPIO46 are in default pull-down mode at boot
# SDA = 33
# SCL = 35
# SS = 12
# MOSI = 11
# MISO = 9
# SCK = 7

# Status Led
# ==========
# Built in LED on GPIO15
# Blinks Blue
# status_led:
#   pin:
#     number: 15
#     inverted: true


# This works, but it fluctates a lot more than I expect.
# sensor:
#   # TODO: change to support a 20khz PWM signal
#   # TODO: change all pins to ones compatible with breadboards / shields
#   - platform: pulse_width
#     pin: 
#       number: 16 
#       mode: INPUT_PULLDOWN #TODO: is this needed?
#     name: Fan Duty Cycle
#     # update_interval: 500ms
#     update_interval: 2s
#     unit_of_measurement: '%'
#     accuracy_decimals: 0
#     filters:
#       - throttle: 5s
#       - lambda: |-
#           auto frequency = 20000.0;
#           auto period = 1.0 / frequency;
#           return (x / period) * 100.0;
#       # Smooth out any jitter in the signal
#       # TODO: this filtering might be a hardware interfierence problem
#       # I didn't see this issue on the esp8266 without a breakboard
#       # - sliding_window_moving_average:
#       #     window_size: 3
#       #     send_every: 1
#       #     send_first_at: 1
#       # - median:
#       #     window_size: 10 # Increased window size for more stable output
#       #     send_every: 1
#       #     send_first_at: 1
#       # - exponential_moving_average:
#       #     alpha: 0.5 # Increased alpha value for better smoothing
#       #     send_every: 1
#       # - throttle: 5s # Log the value every 5 seconds


# sensor:
#   - platform: pulse_counter
#     pin:
#       number: 16
#       mode: INPUT_PULLDOWN # Use built-in pull-down resistor (only for ESP32)
#     name: Fan Duty Cycle
#     # update_interval: 500ms
#     unit_of_measurement: '%'
#     accuracy_decimals: 0
#     # filters:
#     #   - lambda: |-
#     #       const float frequency = 20000.0;
#     #       const float period = 1.0 / frequency;
#     #       const float pulse_width_seconds = x / 2.0 * 60.0 / 1000000.0;
#     #       return (pulse_width_seconds / period) * 100.0;
#     #   - throttle: 5s # Log the value every 5 seconds
#     count_mode:
#       rising_edge: DISABLE
#       falling_edge: INCREMENT
#       # Set the following filter value based on your specific hardware timer's frequency
#     # filter: 13us


# output:
#   - platform: ledc
#     pin: 18
#     frequency: 20kHz
#     id: heatsink_fan

# fan:
# #TODO: default state
#   - platform: speed
#     output: heatsink_fan
#     name: "Heatsink Fan"
#     disabled_by_default: false
#     internal: false #TODO: make internal
#     #oscillation_output: heatsink_fan #TODO: not working
#     speed_count: 100 #TODO: do we need granular speed access, or is off/medium/high enough?
#     # speed:
#     #   - value_template: "{{ (100 - (100 - value | float) * 0.01) }}"
#     #   - entity_id: sensor.fan_duty_cycle

# this works but it is choppy
# light:
#   - platform: neopixelbus
#     id: neopixel_light
#     type: GRB
#     variant: WS2812
#     pin: 33
#     num_leds: 1
#     name: "NeoPixel Light"
#     effects:
#       - addressable_rainbow:
#           name: Ranbow Effect
#           speed: 50
#           width: 100

light:
  - platform: fastled_clockless
    id: fastled_light
    pin: 33
    chipset: WS2812
    num_leds: 1
    name: "FastLED Light"
    effects:
      - addressable_rainbow:
          name: Rainbow Effect
          speed: 10
          width: 100
      - addressable_color_wipe:
